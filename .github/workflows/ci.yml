# .github/workflows/ci.yml
name: CI - Gatsby Build, Test, and Deploy
permissions:
  contents: write
  pages: write
  id-token: write
# Run this workflow on any push to any branch.
on: push
# A workflow can have one or more jobs.
jobs:
  build:
    # Run this job on a Github hosted action runner with the latest version of ubuntu installed.
    runs-on: ubuntu-latest
    # A job has one or more steps.
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Detect package manager
      id: detect-package-manager
      run: |
        if [ -f "${{ github.workspace }}/yarn.lock" ]; then
          echo "manager=yarn" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          exit 0
        elif [ -f "${{ github.workspace }}/package.json" ]; then
          echo "manager=npm" >> $GITHUB_OUTPUT
          echo "command=ci" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "Unable to determine package manager"
          exit 1
        fi
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: "22"
        cache: ${{ steps.detect-package-manager.outputs.manager }}
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5
      with:
        # Automatically inject pathPrefix in your Gatsby configuration file.
        #
        # You may remove this line if you want to manage the configuration yourself.
        static_site_generator: gatsby
    - name: Restore cache
      uses: actions/cache@v4
      with:
        path: |
          public
          .cache
        key: ${{ runner.os }}-gatsby-build-${{ hashFiles('public') }}
        restore-keys: |
          ${{ runner.os }}-gatsby-build-
    - name: Install dependencies
      run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
    - name: Build with Gatsby
      env:
        PREFIX_PATHS: 'true'
      run: ${{ steps.detect-package-manager.outputs.manager }} run build
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
      - name: Install dependencies
        run: npm install
      # Run the Jest unit tests and generate a coverage report.
      - name: test
        run: npm test -- --coverage || echo "No tests yet."
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4